<?xml version="1.0"?>

<launch>

  <arg name="model_name" default="carma_fixed"/>
  <arg name="version" default="0"/>
  <arg name="model" default="$(find manipulator_tether_lifting)/urdf/carma/base_carma_on_ceiling$(arg version).xacro"/>

  <arg name="xposition" default="0.0"/>
  <arg name="yposition" default="0.0"/>
  <arg name="zposition" default="1.0"/>

  <include file="$(find manipulator_tether_lifting)/launch/spawn_carma_fixed.launch">
    <arg name="model_name" value="$(arg model_name)" />
    <arg name="model" value="$(arg model)"/>
    <arg name="xposition" value="$(arg xposition)"/>
    <arg name="yposition" value="$(arg yposition)"/>
    <arg name="zposition" value="$(arg zposition)"/>
  </include>
  
  <!-- <node name="ros_control_glue_node" pkg="neo_carma_description" type="ros_control_glue_node" output="screen"> -->
    <!-- <remap from="setpoints" to="/morph/potentiometers" /> -->
  <!-- </node> -->

  <node name="rostopic1" pkg="rostopic" type="rostopic" args="pub -r 10 joint1_position_controller/command std_msgs/Float64 'data:  0.0'"/>
  <node name="rostopic2" pkg="rostopic" type="rostopic" args="pub -r 10 joint2_position_controller/command std_msgs/Float64 'data:  0.4'"/>
  <node name="rostopic3" pkg="rostopic" type="rostopic" args="pub -r 10 joint3_position_controller/command std_msgs/Float64 'data: -0.4'"/>
  <node name="rostopic4" pkg="rostopic" type="rostopic" args="pub -r 10 joint4_position_controller/command std_msgs/Float64 'data:  0.0'"/>
  <node name="rostopic5" pkg="rostopic" type="rostopic" args="pub -r 10 joint5_position_controller/command std_msgs/Float64 'data:  0.0'"/>

  <!-- necessaty to control joints (of carma) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />


  <!-- launch controllers for carma's joints-->
  <rosparam 
    command="load" 
    file="$(find manipulator_tether_lifting)/config/carma_control$(arg version).yaml"
  />

<!-- 
  <rosparam>
    joint_state_controller:
      type: joint_state_controller/JointStateController
      publish_rate: 50
    joint1_position_controller:
      type: effort_controllers/JointPositionController
      joint: carma_fixed/carma/joint1
      pid: {p: 4.0, i: 0.5, d: 0.1, i_clamp_min: -1.0, i_clamp_max: 1.0}
    joint2_position_controller:
      type: effort_controllers/JointPositionController
      joint: carma_fixed/carma/joint2
      pid: {p: 1.0, i: 0.5, d: 0.1, i_clamp_min: -1.0, i_clamp_max: 1.0}
    joint3_position_controller:
      type: effort_controllers/JointPositionController
      joint: carma_fixed/carma/joint3
      pid: {p: 1.0, i: 0.5, d: 0.001, i_clamp_min: -1.0, i_clamp_max: 1.0}
    joint4_position_controller:
      type: effort_controllers/JointPositionController
      joint: carma_fixed/carma/joint4
      pid: {p: 1.0, i: 0.5, d: 0.001, i_clamp_min: -1.0, i_clamp_max: 1.0}
    joint5_position_controller:
      type: effort_controllers/JointPositionController
      joint: carma_fixed/carma/joint5
      pid: {p: 0.0, i: 0.0, d: 0.0, i_clamp_min: 0.0, i_clamp_max: 0.0}
  </rosparam>
 -->

  <!-- some renaming of joints' names is necessary -->
  <rosparam param="joint1_position_controller/joint" subst_value="True">$(arg model_name)/carma/joint1</rosparam>
  <rosparam param="joint2_position_controller/joint" subst_value="True">$(arg model_name)/carma/joint2</rosparam>
  <rosparam param="joint3_position_controller/joint" subst_value="True">$(arg model_name)/carma/joint3</rosparam>
  <rosparam param="joint4_position_controller/joint" subst_value="True">$(arg model_name)/carma/joint4</rosparam>
  <rosparam param="joint5_position_controller/joint" subst_value="True">$(arg model_name)/carma/joint5</rosparam>

  
  <!-- send the robot XML to param server -->
<!--   
  <param name="robot_description" command="
    $(find xacro)/xacro.py '$(arg model)'
    model_name:=$(arg model_name)
    namespace:=$(arg model_name)
    "
  /> 
-->

  <!-- load the controllers for the joints of the carma-->
  <node name="controller_spawner" 
    pkg="controller_manager" 
    type="spawner" 
    respawn="false"
    output="screen"
    args=" 
    joint_state_controller 
    joint1_position_controller 
    joint2_position_controller 
    joint3_position_controller
    joint4_position_controller
    joint5_position_controller"
    >
  </node>

</launch>